(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{292:function(v,e,_){v.exports=_.p+"assets/img/mvvm.33fefa58.png"},363:function(v,e,_){"use strict";_.r(e);var o=_(14),t=Object(o.a)({},(function(){var v=this,e=v._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[v._v("#")]),v._v(" 简介")]),v._v(" "),e("p",[v._v("我们都知道，Vue是一个MVVM框架。MVVM采用双向数据绑定，"),e("code",[v._v("View")]),v._v("中数据变化将自动反映到"),e("code",[v._v("ViewModel")]),v._v("上，反之，"),e("code",[v._v("Model")]),v._v("中数据变化也将会自动展示在页面上。把"),e("code",[v._v("Model")]),v._v("和"),e("code",[v._v("View")]),v._v("关联起来的就是"),e("code",[v._v("ViewModel")]),v._v("。"),e("code",[v._v("ViewModel")]),v._v("负责把"),e("code",[v._v("Model")]),v._v("的数据同步到"),e("code",[v._v("View")]),v._v("显示出来，还负责把"),e("code",[v._v("View")]),v._v("的修改同步回"),e("code",[v._v("Model")]),v._v("。")]),v._v(" "),e("p",[e("img",{attrs:{src:_(292),alt:"mvvm"}})]),v._v(" "),e("p",[v._v("那么问题来了，"),e("code",[v._v("ViewModel")]),v._v("是如何知道"),e("code",[v._v("Model")]),v._v("中的数据发生变化了呢？")]),v._v(" "),e("h2",{attrs:{id:"什么是变化侦测"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是变化侦测"}},[v._v("#")]),v._v(" 什么是变化侦测？")]),v._v(" "),e("p",[v._v("变化侦测就是用来解决这个问题的")]),v._v(" "),e("p",[v._v("变化侦测，或称为状态追踪，是指监测数据的变化情况，并在发生变化时更新视图。")]),v._v(" "),e("p",[v._v("变化侦测可以分为两种类型：推（push）和拉（pull）。")]),v._v(" "),e("p",[v._v("在"),e("code",[v._v("Angular")]),v._v("和"),e("code",[v._v("React")]),v._v("中，采用的是拉方式的变化侦测。这意味着当状态发生变化时，它并不知道具体哪个状态发生了变化，只知道可能有状态发生变化。然后，它会向框架发送一个信号，告知框架可能有变化发生。框架在接收到信号后，会进行一次全面的比对，以确定哪些DOM节点需要重新渲染。在"),e("code",[v._v("Angular")]),v._v("中，这个过程被称为脏检查，而在"),e("code",[v._v("React")]),v._v("中则使用了"),e("code",[v._v("虚拟DOM")]),v._v("。")]),v._v(" "),e("p",[v._v("而Vue的变化侦测属于推方式。当状态发生变化时，Vue能够立即察觉，并且在某种程度上能够知道哪些状态发生了变化。因此，它具有更多的信息，可以进行更精细的更新操作。")]),v._v(" "),e("p",[v._v("接下来我们通过源码来学习Vue的数据变化侦测实现。")])])}),[],!1,null,null,null);e.default=t.exports}}]);